#include <stdio.h>
#include <stdlib.h>
int max(int a,int b){
return a>b?a:b;
}
void knapsack(int n,int m,int v[][10],int p[],int w[]){
for(int i=0;i<=n;i++){
    for(int j=0;j<=m;j++){
        if(i==0 || j==0){
            v[i][j]=0;
        }
        else if(j<w[i]){
            v[i][j]=v[i-1][j];
        }
        else{
            v[i][j]=max(v[i-1][j],v[i-1][j-w[i]]+p[i]);
        }
    }
}
}
void print_optimal(int n,int m,int v[][10],int w[]){
printf("the optimal solution is %d\n",v[n][m]);
int i=n,j=m,x[10];
for(int i=1;i<=n;i++){
    x[i]=0;
}
while(i!=0 && j!=0){
    if(v[i][j] != v[i-1][j]){
        x[i]=1;
        j=j-w[i];
    }
    i=i-1;
}
for(int i=1;i<=n;i++){
    printf("x[%d]\t",i);
}
printf("=");
for(int i=1;i<=n;i++){
    printf("%d",x[i]);
}
}
int main()
{
int p[10],w[10],v[10][10],n,m;
printf("enter the number of object\n");
scanf("%d",&n);
printf("enter the weights of the objects\n");
for(int i=1;i<=n;i++){
    scanf("%d",&w[i]);
}
printf("enter the profit\n");
for(int i=1;i<=n;i++){
scanf("%d",&p[i]);
}
printf("enter the capacity of knapsack\n");
scanf("%d",&m);
knapsack(n,m,v,p,w);
printf("the output is\n");
for(int i=0;i<=n;i++){
    for(int j=0;j<=m;j++){
        printf("%d\t",v[i][j]);
    }
    printf("\n");
}
print_optimal(n,m,v,w);
}
